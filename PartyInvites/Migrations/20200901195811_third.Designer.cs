// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyInvites.Models;

namespace PartyInvites.Migrations
{
    [DbContext(typeof(CalcDbContext))]
    [Migration("20200901195811_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.6.20312.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PartyInvites.Models.Calculations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Result")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Calculations");
                });

            modelBuilder.Entity("PartyInvites.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnName("city_Id")
                        .HasColumnType("int");

                    b.Property<string>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<decimal?>("Lat")
                        .HasColumnName("lat")
                        .HasColumnType("decimal(7, 4)");

                    b.Property<decimal?>("Lon")
                        .HasColumnName("lon")
                        .HasColumnType("decimal(7, 4)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NameAscii")
                        .HasColumnName("name_ascii")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PartyInvites.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnName("country_Id")
                        .HasColumnType("int");

                    b.Property<string>("Iso2")
                        .HasColumnName("iso2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Iso3")
                        .HasColumnName("iso3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
